// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var verifier = artifacts.require('Verifier');

var correctProof = require("../proofFol/proof1.json");

contract('TestVerifier', accounts => {

    const account_one = accounts[0];

    describe('Test for verification', function () {
        beforeEach(async function () { 
            this.contract = await verifier.new({from: account_one});
        })
        // Test verification with correct proof
        // - use the contents from proof.json generated from zokrates steps
        it('Test verification with correct proof', async function () { 
        // console.log(correctProof);
        let result = await this.contract.verifyTx.call(correctProof.proof.a,correctProof.proof.b,correctProof.proof.c,correctProof.inputs);
        assert.equal( result, true, 'It should verifie the proof');        
        })
        // Test verification with incorrect proof
        it('Test verification with incorrect proof', async function () { 
            let input = [0,1];
            let result = await this.contract.verifyTx.call(correctProof.proof.a,correctProof.proof.b,correctProof.proof.c,input);
            assert.equal( result, false, 'It should not verifie the proof');
        })
    })

})